ggplot(aes(x= Genus, y=Useful.Life.Expectancy.Value))+
geom_boxplot()+
labs(title = "The distribution of life expectancy for Top 5 trees")
)
}
shinyApp(ui,server)
## 4. To create an interactive visualization in R with Shiny
ui <- fluidPage(
headerPanel("Common Trees around Fitzroy Gardens"),
fluidRow(
column(4,
h3("The top 5 Trees"),
"Hello My pleasure",
fluidRow(plotOutput("VIS1"))),
column(8,
leafletOutput('map'),
absolutePanel(top = 10, left = 50,
pickerInput("Genus",
"Genus",
multiple = T,
choices = list("Corymbia" = "Corymbia",
"Ficus" = "Ficus",
"Platanus" = "Platanus",
"Quercus" = "Quercus",
"Ulmus" = "Ulmus"),
selected = unique(top_5_data$Genus))
)
)
),
fluidRow(
column(4,
h4("The description of the VIS2"),
),
column(8,plotOutput("VIS2"))
)
)
server <- function(input, output){
output$map = renderLeaflet({
top_5_data[top_5_data$Genus == input$Genus, ] %>%
leaflet() %>%
addTiles() %>%
addCircles(~Longitude, ~Latitude,
color= ~color_seq(Genus),
radius= ~Diameter.Breast.Height/20,
label= ~Genus) %>%
addLegend('bottomright', pal= color_seq, values = ~Genus)
})
output$VIS1 = renderPlot(
top_5_data %>%
ggplot(aes(x=Genus))+
geom_bar(stat='count')+
labs(title = "The top 5 genera by count", x="Genus",y="Count")+
geom_text(stat='count',aes(label = ..count..), size = 3, vjust=-1)
)
output$VIS2 = renderPlot(
top_5_data %>%
ggplot(aes(x= Genus, y=Useful.Life.Expectancy.Value))+
geom_boxplot()+
labs(title = "The distribution of life expectancy for Top 5 trees")
)
}
shinyApp(ui,server)
## 4. To create an interactive visualization in R with Shiny
ui <- fluidPage(
headerPanel("Common Trees around Fitzroy Gardens"),
fluidRow(
column(4,
h3("The top 5 Trees"),
"In these years, the number of Ulmus occupies the dominant position,
which has 349 trees. Flcus is the second most numerous tree with 92
trees. We can clearly find Corymbia, Ficus and Quercus have the similar
number of trees about 62.",
fluidRow(plotOutput("VIS1"))),
column(8,
leafletOutput('map'),
absolutePanel(top = 10, left = 50,
pickerInput("Genus",
"Genus",
multiple = T,
choices = list("Corymbia" = "Corymbia",
"Ficus" = "Ficus",
"Platanus" = "Platanus",
"Quercus" = "Quercus",
"Ulmus" = "Ulmus"),
selected = unique(top_5_data$Genus))
)
)
),
fluidRow(
column(4,
h4("The description of the VIS2"),
),
column(8,plotOutput("VIS2"))
)
)
server <- function(input, output){
output$map = renderLeaflet({
top_5_data[top_5_data$Genus == input$Genus, ] %>%
leaflet() %>%
addTiles() %>%
addCircles(~Longitude, ~Latitude,
color= ~color_seq(Genus),
radius= ~Diameter.Breast.Height/20,
label= ~Genus) %>%
addLegend('bottomright', pal= color_seq, values = ~Genus)
})
output$VIS1 = renderPlot(
top_5_data %>%
ggplot(aes(x=Genus))+
geom_bar(stat='count')+
labs(title = "The top 5 genera by count", x="Genus",y="Count")+
geom_text(stat='count',aes(label = ..count..), size = 3, vjust=-1)
)
output$VIS2 = renderPlot(
top_5_data %>%
ggplot(aes(x= Genus, y=Useful.Life.Expectancy.Value))+
geom_boxplot()+
labs(title = "The distribution of life expectancy for Top 5 trees")
)
}
shinyApp(ui,server)
## 4. To create an interactive visualization in R with Shiny
ui <- fluidPage(
headerPanel("Common Trees around Fitzroy Gardens"),
fluidRow(
column(4,
h3("The top 5 Trees"),
"In these years, the number of Ulmus occupies the dominant position,
which has 349 trees. Flcus is the second most numerous tree with 92
trees. We can clearly find Corymbia, Ficus and Quercus have the similar
number of trees about 62.",
fluidRow(plotOutput("VIS1"))),
column(8,
leafletOutput('map'),
absolutePanel(top = 10, left = 50,
pickerInput("Genus",
"Genus",
multiple = T,
choices = list("Corymbia" = "Corymbia",
"Ficus" = "Ficus",
"Platanus" = "Platanus",
"Quercus" = "Quercus",
"Ulmus" = "Ulmus"),
selected = unique(top_5_data$Genus))
)
)
),
fluidRow(
column(4,
h3("The description of the VIS2"),
"According to the boxplot of life expectancy for Top 5 trees,
we can clearly see the maximum, minimum, 25%, 75%, midian and
average value of life expectancy for each trees. In addition
to outliers, Quercus has the highest average life expectancy
in these 5 trees. On the contrary, Platanus has the lowest
average life expectancy. A large part of Corymbia have the
same life expectancy about 60 years, which is very stable.
However, Ficus has the longest range from 22 to 80 years of
life expectency. The life expectancy range of Ulmus is recorded
between 10 and 30 years."
),
column(8,plotOutput("VIS2"))
)
)
server <- function(input, output){
output$map = renderLeaflet({
top_5_data[top_5_data$Genus == input$Genus, ] %>%
leaflet() %>%
addTiles() %>%
addCircles(~Longitude, ~Latitude,
color= ~color_seq(Genus),
radius= ~Diameter.Breast.Height/20,
label= ~Genus) %>%
addLegend('bottomright', pal= color_seq, values = ~Genus)
})
output$VIS1 = renderPlot(
top_5_data %>%
ggplot(aes(x=Genus))+
geom_bar(stat='count')+
labs(title = "The top 5 genera by count", x="Genus",y="Count")+
geom_text(stat='count',aes(label = ..count..), size = 3, vjust=-1)
)
output$VIS2 = renderPlot(
top_5_data %>%
ggplot(aes(x= Genus, y=Useful.Life.Expectancy.Value))+
geom_boxplot()+
labs(title = "The distribution of life expectancy for Top 5 trees")
)
}
shinyApp(ui,server)
## 4. To create an interactive visualization in R with Shiny
ui <- fluidPage(
headerPanel("Common Trees around Fitzroy Gardens"),
fluidRow(
column(5,
h3("The top 5 Trees"),
"In these years, the number of Ulmus occupies the dominant position,
which has 349 trees. Flcus is the second most numerous tree with 92
trees. We can clearly find Corymbia, Ficus and Quercus have the similar
number of trees about 62.",
fluidRow(plotOutput("VIS1"))),
column(7,
leafletOutput('map'),
absolutePanel(top = 10, left = 50,
pickerInput("Genus",
"Genus",
multiple = T,
choices = list("Corymbia" = "Corymbia",
"Ficus" = "Ficus",
"Platanus" = "Platanus",
"Quercus" = "Quercus",
"Ulmus" = "Ulmus"),
selected = unique(top_5_data$Genus))
)
)
),
fluidRow(
column(5,
h3("The description of the VIS2"),
"According to the boxplot of life expectancy for Top 5 trees,
we can clearly see the maximum, minimum, 25%, 75%, midian and
average value of life expectancy for each trees. In addition
to outliers, Quercus has the highest average life expectancy
in these 5 trees. On the contrary, Platanus has the lowest
average life expectancy. A large part of Corymbia have the
same life expectancy about 60 years, which is very stable.
However, Ficus has the longest range from 22 to 80 years of
life expectency. The life expectancy range of Ulmus is recorded
between 10 and 30 years."
),
column(7,plotOutput("VIS2"))
)
)
server <- function(input, output){
output$map = renderLeaflet({
top_5_data[top_5_data$Genus == input$Genus, ] %>%
leaflet() %>%
addTiles() %>%
addCircles(~Longitude, ~Latitude,
color= ~color_seq(Genus),
radius= ~Diameter.Breast.Height/20,
label= ~Genus) %>%
addLegend('bottomright', pal= color_seq, values = ~Genus)
})
output$VIS1 = renderPlot(
top_5_data %>%
ggplot(aes(x=Genus))+
geom_bar(stat='count')+
labs(title = "The top 5 genera by count", x="Genus",y="Count")+
geom_text(stat='count',aes(label = ..count..), size = 3, vjust=-1)
)
output$VIS2 = renderPlot(
top_5_data %>%
ggplot(aes(x= Genus, y=Useful.Life.Expectancy.Value))+
geom_boxplot()+
labs(title = "The distribution of life expectancy for Top 5 trees")
)
}
shinyApp(ui,server)
summary(midwest)
midwest <- data("midwest", package = 'ggplot2')
summary(midwest)
options(scipen=999)
midwest
data("midwest", package = 'ggplot2')
data("midwest", package = 'ggplot2')
midwest
options(scipen=999)
midwest %>%
ggplot(aes(x=area, y=poptotal)) +
geom_point(aes(col=state, size=popdensity)) +
ylim(0,2500000)
library(ggplot2)
midwest %>%
ggplot(aes(x=area, y=poptotal)) +
geom_point(aes(col=state, size=popdensity)) +
ylim(0,2500000)
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state, size=popdensity)) +
ylim(0,2500000)
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state, size=popdensity)) +
ylim(0,2500000) +
xlim(0,0.1)
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state, size=popdensity)) +
ylim(0,2500000) +
xlim(0,0.1) +
geom_smooth(se=F)
install.packages("ggalt")
library(ggplot2)
library(ggalt)
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state, size=popdensity)) +
ylim(0,2500000) +
xlim(0,0.1) +
geom_encircle(aes(x=area, y=poptotal))
midwest_filtered = midwest[midwest$poptotal > 250000 &
midwest$poptotal <= 500000 &
midwest$area > 0.01 &
midwest$area <= 0.1]
midwest_filtered = midwest[midwest$poptotal > 250000 &
midwest$poptotal <= 500000 &
midwest$area > 0.01 &
midwest$area <= 0.1,]
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state, size=popdensity)) +
ylim(0,2500000) +
xlim(0,0.1) +
geom_encircle(data = midwest_filtered, aes(x=area, y=poptotal))
data(mpg)
ggplot(mpg, aes(cty,hwy)) +
geom_point()
ggplot(mpg, aes(cty,hwy)) +
geom_jitter()
ggplot(mpg, aes(cty,hwy)) +
geom_count()
ggplot(mpg, aes(cty,hwy)) +
geom_count(aes(color=model))
mpg_filtered = mpg[mpg$maunfacter %in% c('audi','ford','honda','hyundai'),]
mpg_filtered = mpg[mpg$maunfacter %in% c('audi','ford','honda','hyundai'), ]
mpg_filtered = mpg[mpg$maunfacturer %in% c('audi','ford','honda','hyundai'), ]
data(mpg)
mpg_filtered = mpg[mpg$manufacturer %in% c('audi','ford','honda','hyundai'), ]
ggplot(mpg, aes(displ,city))+
geom_jitter(aes(col=manufaturer, size=hwy))
ggplot(mpg, aes(displ,city))+
geom_jitter(aes(col=manufacturer, size=hwy))
ggplot(mpg, aes(displ,cty))+
geom_jitter(aes(col=manufacturer, size=hwy))
install.packages(""gganimate)
ggplot(mpg, aes(displ,cty))+
geom_jitter(aes(col=manufacturer, size=hwy))
install.packages("gganimate")
library(ggplot2)
library(ggalt)
library(gganimate)
install.packages("gapminder")
data("gapminder")
library(ggplot2)
library(ggalt)
library(gganimate)
library(gapminder)
data("gapminder")
data("gapminder")
ggplot(gapminder, aes(gdpPercap, lifeExp, size =pop, frame=year))+
geom_point()+
facet_grid(~continent)
data("gapminder")
ggplot(gapminder, aes(gdpPercap, lifeExp, size =pop, frame=year))+
geom_point()+
facet_grid(~continent)
install.packages("ggExtra")
library(ggplot2)
library(ggalt)
library(gganimate)
library(gapminder)
library(ggExtra)
ggplot(mpg, aes(displ,cty))+
geom_jitter(aes(col=manufacturer, size=hwy))
p=ggplot(mpg,aes(cty,hwy))+
geom_point()
ggplot(mpg, aes(displ,cty))+
geom_jitter(aes(col=manufacturer, size=hwy))
p=ggplot(mpg,aes(cty,hwy))+
geom_point()
ggMarginal(p, type = 'histogram')
ggMarginal(p, type = 'boxplot')
ininstall.packages("ggcorrplot")
install.packages("ggcorrplot")
library(ggplot2)
library(ggalt)
library(gganimate)
library(gapminder)
library(ggExtra)
library(ggcorrplot)
data("mtcar")
data("mtcars")
data("mtcars")
ggcorrplot(mtcars, lab=True)
data("mtcars")
ggcorrplot(mtcars, lab=T, method='circle', type='lower')
data("mtcars")
correlation = cor(mtcars)
correlation
ggcorrplot(mtcars, lab=T, method='circle', type='lower')
mtcars$car_name = rownames(mtcars)
mtcars
mtcars$car_name = rownames(mtcars)
mtcars
mtcars$mpg_z=round(mtcars$mpg - mean(mtcars$mpg)/sd(mtcars$mpg))
mtcars$car_name = rownames(mtcars)
mtcars$mpg_z=round(mtcars$mpg - mean(mtcars$mpg)/sd(mtcars$mpg))
mtcars$car_name = rownames(mtcars)
mtcars$mpg_z=round(mtcars$mpg - mean(mtcars$mpg)/sd(mtcars$mpg),2)
mtcars$mpg_type = ifelse(mtcars$mpg_z <0, 'below', 'above')
mtcars$car_name = as.factor(mtcars$car_name)
ggplot(mtcars, aes(x=car_name,y=mpg_z, label=mpg_z))+
geom_bar(stat='identity',aes(fill=mpg_type)) +
scale_fill_manual(names='Milleage',
labels=c('Above','Below'),
values=c('above'='red','below'='green'))+
coord_flip()
ggplot(mtcars, aes(x=car_name,y=mpg_z, label=mpg_z))+
geom_bar(stat='identity',aes(fill=mpg_type)) +
scale_fill_manual(name='Milleage',
labels=c('Above','Below'),
values=c('above'='red','below'='green'))+
coord_flip()
mtcars$mpg_type = ifelse(mtcars$mpg_z <16, 'below', 'above')
ggplot(mtcars, aes(x=car_name,y=mpg_z, label=mpg_z))+
geom_bar(stat='identity',aes(fill=mpg_type)) +
scale_fill_manual(name='Milleage',
labels=c('Above','Below'),
values=c('above'='red','below'='green'))+
coord_flip()
cty_mpg = aggregate(mpg$cty, by =list(mpg$manufacturer),FUN=mean)
cty_mpg
colnames(cty_mpg) = c('make','mileage')
cty_mpg=cty_mpg[order(cty_mpg$mileage),]
cty_mpg$make=as.factor(cty_mpg$make)
ggplot(cty_mpg,aes(x=make,y=mileage))+
geom_bar(stat='identity')
cty_mpg$make=as.factor(cty_mpg$make,levels=cty_mpg$make)
cty_mpg$make=as.factor(cty_mpg$make,levels=cty_mpg$make)
ggplot(cty_mpg,aes(x=make,y=mileage))+
geom_bar(stat='identity')
cty_mpg = aggregate(mpg$cty, by =list(mpg$manufacturer),FUN=mean)
cty_mpg
colnames(cty_mpg) = c('make','mileage')
cty_mpg=cty_mpg[order(cty_mpg$mileage),]
cty_mpg$make=as.factor(cty_mpg$make,levels=cty_mpg$make)
cty_mpg$make=as.factor(cty_mpg$make,levels=cty_mpg$make)
ggplot(cty_mpg,aes(x=make,y=mileage))+
geom_bar(stat='identity')
cty_mpg=cty_mpg[order(cty_mpg$mileage),]
cty_mpg$make=as.factor(cty_mpg$make,levels=cty_mpg$make)
ggplot(mpg,aes(displ))+
geom_histogram(aes(fill=class))+
scale_fill_brewer(palatte='Spectral')
ggplot(mpg,aes(displ))+
geom_histogram(aes(fill=class))+
scale_fill_brewer(palette='Spectral')
ggplot(mpg,aes(manufacturer))+
geom_bar(aes(fill=class))+
scale_fill_brewer(palette='Spectral')
ggplot(mpg,aes(cty))+
geom_density(aes(fill=factor(cyl)),alpha=0.5)
ggplot(mpg,aes(manufacturer,cty))+
geom_boxplot()+
geom_dotplot(binaxis='y',stackdir='center',dotsize=0.4)
df = as.data.frame(table(mpg$class))
colnames(df) = c('class','frequency')
ggplot(df,aes(x="",y=frequency, fill=factor(class)))+
geom_bar(stat='identity')+
coord_polar(theta='y',start=0)
install.packages("treemapify")
library(ggplot2)
library(ggalt)
library(gganimate)
library(gapminder)
library(ggExtra)
library(ggcorrplot)
library(treemapify)
library(ggplot2)
library(ggalt)
library(gganimate)
library(gapminder)
library(ggExtra)
library(ggcorrplot)
library(treemapify)
library(fpp3)
install.packages("fpp3")
library(ggplot2)
library(ggalt)
library(gganimate)
library(gapminder)
library(ggExtra)
library(ggcorrplot)
library(treemapify)
library(fpp3)
library(ggplot2)
library(ggalt)
library(gganimate)
library(gapminder)
library(ggExtra)
library(ggcorrplot)
library(treemapify)
library(fpp3)
library(ggdendro)
a=hclust(dist(USArrests),'ave')
ggdendrogram(a,rotate=T,size=2)
ggplot(df_pc, aes(PC1,PC2, col=Species))+
geom_point(aes(shape=Species))+
geom_encircle(data=df_pc[df_pc$Species=='virginica', ])+
geom_encircle(data=df_pc[df_pc$Species=='setosa', ])+
geom_encircle(data=df_pc[df_pc$Species=='versicolor', ])
data(iris)
df_pc=data.frame(pca_mod$x, Species=iris$Species)
data(iris)
pca_mod=prcomp(iris[isis[c(1:4)]])
data(iris)
pca_mod=prcomp(iris[iris[c(1:4)]])
data(iris)
pca_mod=prcomp(iris[c(1:4)])
df_pc=data.frame(pca_mod$x, Species=iris$Species)
ggplot(df_pc, aes(PC1,PC2, col=Species))+
geom_point(aes(shape=Species))+
geom_encircle(data=df_pc[df_pc$Species=='virginica', ])+
geom_encircle(data=df_pc[df_pc$Species=='setosa', ])+
geom_encircle(data=df_pc[df_pc$Species=='versicolor', ])
setwd("~/Typora Notebook/R plot")
